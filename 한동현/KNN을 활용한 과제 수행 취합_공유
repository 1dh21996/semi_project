{"cells":[{"cell_type":"markdown","source":["# 개요\n","2023-12-15 ~ KNN 알고리즘을 활용한 과제 수행\n"],"metadata":{"id":"9ZHelqPKnxOQ"}},{"cell_type":"markdown","source":["# 모듈 임포트"],"metadata":{"id":"Jo1cfPfZnvtn"}},{"cell_type":"code","source":["'''모듈 임포트'''\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report, f1_score\n","\n","\n","# 데이터 핸들링\n","import numpy as np\n","import pandas as pd\n","\n","# 데이터 시각화\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# 데이터 분석\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.metrics import classification_report, f1_score\n","\n","# 모름\n","from sklearn.linear_model import LogisticRegression\n","import warnings\n","from sklearn.svm import SVC\n","\n","from sklearn.model_selection import KFold, cross_val_score, train_test_split, StratifiedKFold\n","from sklearn.tree import DecisionTreeClassifier, plot_tree\n","from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier, VotingClassifier, StackingClassifier, AdaBoostClassifier, GradientBoostingClassifier\n","from sklearn.dummy import DummyClassifier\n","from sklearn.impute import SimpleImputer\n","\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_auc_score, confusion_matrix, roc_curve\n","from sklearn.pipeline import make_pipeline, Pipeline\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler, RobustScaler, LabelEncoder, OrdinalEncoder, OneHotEncoder\n","from sklearn.compose import ColumnTransformer\n","from sklearn.ensemble import HistGradientBoostingClassifier"],"metadata":{"id":"O_YtwInK6wNB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 로드"],"metadata":{"id":"lb8cVv3FntFE"}},{"cell_type":"code","source":["'''데이터 파일 임포트'''\n","# 구글 드라이브 파일 로드를 위해, 구글 드라이브 마운트\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# 파일의 폴더 경로 지정해주기(/content/drive/MyDrive/Colab Notebooks/data)\n","path = '/content/drive/MyDrive/Colab Notebooks/data'\n","\n","# 파일명 넣고, 각 변수에 저장\n","train_data = pd.read_csv(path +'/T_train.csv',encoding='EUC-KR')\n","test_data = pd.read_csv(path +'/T_test.csv',encoding='EUC-KR')\n","sample_submission = pd.read_csv(path +'/T_sample_submission.csv',encoding='EUC-KR')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":421},"id":"STVCznBu45c5","executionInfo":{"status":"error","timestamp":1702886507378,"user_tz":-540,"elapsed":1148819,"user":{"displayName":"DongHyeon Han","userId":"11979079984637951265"}},"outputId":"31f61496-9591-488f-e578-00c49823542a"},"execution_count":null,"outputs":[{"output_type":"error","ename":"MessageError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-ab396e220b4b>\u001b[0m in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# 구글 드라이브 파일 로드를 위해, 구글 드라이브 마운트\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;31m# 파일의 폴더 경로 지정해주기(/content/drive/MyDrive/Colab Notebooks/data)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms, readonly)\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m120000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mreadonly\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     99\u001b[0m   \u001b[0;34m\"\"\"Mount your Google Drive at the specified mountpoint path.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 100\u001b[0;31m   return _mount(\n\u001b[0m\u001b[1;32m    101\u001b[0m       \u001b[0mmountpoint\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    102\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral, readonly)\u001b[0m\n\u001b[1;32m    127\u001b[0m   )\n\u001b[1;32m    128\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 129\u001b[0;31m     _message.blocking_request(\n\u001b[0m\u001b[1;32m    130\u001b[0m         \u001b[0;34m'request_auth'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m'authType'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'dfs_ephemeral'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    131\u001b[0m     )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    174\u001b[0m       \u001b[0mrequest_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrequest\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mparent\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexpect_reply\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m   )\n\u001b[0;32m--> 176\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    101\u001b[0m     ):\n\u001b[1;32m    102\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 103\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    104\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    105\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}]},{"cell_type":"markdown","source":["# 데이터 확인"],"metadata":{"id":"Qli-egDxoDVG"}},{"cell_type":"code","source":["# 로드 데이터 확인\n","display(train_data.describe())\n","display(train_data)\n","display(test_data.describe())\n","display(test_data)"],"metadata":{"id":"Kgzy2bmDnPR0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 시각화"],"metadata":{"id":"69X2hz2VoFC4"}},{"cell_type":"code","source":["plt.figure(figsize=(16,12))\n","i = 0\n","for col in train_data.columns:\n","    i += 1\n","    plt.subplot(4,4,i)\n","    sns.violinplot(data=train_data, x='target',y=col)\n","    plt.title(f\"{col}\")\n","plt.tight_layout()"],"metadata":{"id":"0X_McqshnaKv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 정규화"],"metadata":{"id":"3GUYzKLwoIJX"}},{"cell_type":"code","source":["# 필요 없는 데이터 아웃\n","train.drop(['user_id'], axis=1, inplace=True)\n","test.drop(['user_id'], axis=1, inplace=True)"],"metadata":{"id":"5FKeeHsG359l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 수치형 및 범주형 변수 구분\n","numerical_cols = [col for col in train_data.columns if train_data[col].dtype in ['int64', 'float64'] and col not in ['target']]\n","categorical_cols = [col for col in train_data.columns if train_data[col].dtype == 'object' and col not in ['user_id']]\n","\n","# 데이터 스케일링을 위한 StandardScaler 인스턴스 생성\n","scaler = StandardScaler()\n","\n","# 수치형 데이터에 대해 스케일링 적용\n","train_data[numerical_cols] = scaler.fit_transform(train_data[numerical_cols])\n","test_data[numerical_cols] = scaler.transform(test_data[numerical_cols])\n","\n","display(train_data)\n","display(test_data)"],"metadata":{"id":"tgOVK-Vq7nYL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 분리"],"metadata":{"id":"2jX8oGZ3oRpl"}},{"cell_type":"code","source":["X = train_data.loc[:, 'subscription_duration':'payment_pattern'] #정답을 뺀 학습값 분리\n","y = train_data.loc[:, 'target'] #정답 분리\n","test_data = test_data.loc[:, 'subscription_duration':'payment_pattern'] #정답을 뺀 학습값 분리\n","\n","print(X.shape)\n","print(y.shape)\n","print(test_data.shape)\n","y.value_counts() # values 값 이진분류"],"metadata":{"id":"I2qCZrTnoT8J"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 데이터 전처리-원핫 인코딩"],"metadata":{"id":"gKDXbhjioV1X"}},{"cell_type":"code","source":["X_one_hot = pd.get_dummies(X)\n","test_data_one_hot = pd.get_dummies(test_data)"],"metadata":{"id":"lgtYUw4YoZ-u"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 모델링"],"metadata":{"id":"5KuBldGGocYe"}},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X_one_hot, y, test_size = 0.2, random_state=1)"],"metadata":{"id":"yrfG_zrcodBY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 테스트"],"metadata":{"id":"ZIT8l5yjofXR"}},{"cell_type":"code","source":["X_train = X_train[['average_time_per_learning_session', 'customer_inquiry_history']]\n","X_test= X_test[['average_time_per_learning_session', 'customer_inquiry_history']]"],"metadata":{"id":"L6Q3A5PSohC6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# KNN model"],"metadata":{"id":"fFBdbcAaoi8S"}},{"cell_type":"code","source":["# 학습\n","clf_knn =  KNeighborsClassifier(n_neighbors=1)\n","clf_knn.fit(X_train, y_train)\n","\n","# 검증 데이터에서 성능 평가\n","val_predictions = clf_knn.predict(X_test)\n","val_f1 = f1_score(y_test, val_predictions, average='macro', zero_division=0)\n","\n","print(\"검증 데이터(Validation) Macro F1 성능 : \",val_f1)\n","print(classification_report(y_test, val_predictions, zero_division=0))"],"metadata":{"id":"U-Cs0Ds9oixb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"aRNhvgFOoq0f"}},{"cell_type":"code","source":["# 테스트 데이터에 대한 예측 수행\n","test_data_one_hot=test_data_one_hot[['average_time_per_learning_session', 'customer_inquiry_history']] #TEST4\n","test_predictions = clf_knn.predict(test_data_one_hot)\n","\n","# 제출 양식 파일(sample_submission.csv)의 'target' 컬럼에 나의 Test 데이터에 대한 예측 결과로 채우기\n","sample_submission['target'] = test_predictions\n","\n","# 리더보드 제출을 위해 나의 예측 결과를 baseline_submit.csv로 저장\n","#submit_path = 'C:/Users/jack/Downloads/open/sample_submission.csv'\n","#sample_submission.to_csv(submit_path, index=False)\n","\n","sample_submission"],"metadata":{"id":"yL1uqYjSoq9Y"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"gpuType":"T4","machine_shape":"hm","provenance":[{"file_id":"1f6rKsH-vb7v1Ql81H2n58vVohRbplNd7","timestamp":1702880186412},{"file_id":"1YHo3M2rMISWCiVErZgBpKo16rmW798XJ","timestamp":1702617017369},{"file_id":"https://github.com/BigDeepData/2312_dl/blob/main/notebook/231211_dl_12_stock_rnn_practice.ipynb","timestamp":1702271240233}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}